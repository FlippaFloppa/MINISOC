apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: monitoring
spec: {}
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: monitoring
data:
  nginx.conf: |
    user nginx;
    error_log  /var/log/nginx/nginx-error.log;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       8080;
          server_name  localhost;
          access_log /var/log/nginx/nginx-access.log;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ingress-pv
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/scalable"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ingress-pvc
  namespace: monitoring
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: simple-app
  name: simple-app
  annotations:
    metallb.universe.tf/allow-shared-ip: "scalable"
  namespace: monitoring
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 8080
  selector:
    app: simple-app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: simple-app
  name: simple-app
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: simple-app
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
        volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-ingress-pvc
              mountPath: /var/log/nginx
      - name: goaccess
        command:
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "while true; do goaccess /var/log/nginx/nginx-access.log -o /var/log/nginx/result.html --log-format=COMBINED; done;" ]
        image: allinurl/goaccess
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 200m
            memory: 32Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/nginx
          name: nginx-ingress-pvc
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: nginx-ingress-pvc
        persistentVolumeClaim:
          claimName: ingress-pvc
status: {}
